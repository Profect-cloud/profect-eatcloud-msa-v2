server.port=8087
spring.application.name=payment-service

eureka.client.service-url.defaultZone=${EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE:http://localhost:8761/eureka}
eureka.instance.prefer-ip-address=true

eureka.client.enabled=${EUREKA_CLIENT_ENABLED:true}
spring.cloud.discovery.enabled=${SPRING_CLOUD_DISCOVERY_ENABLED:true}

spring.jpa.hibernate.ddl-auto=none
spring.sql.init.mode=always
spring.sql.init.schema-locations=classpath:db/schema.sql
spring.sql.init.data-locations=classpath:db/data.sql
spring.jpa.defer-datasource-initialization=false


spring.data.redis.timeout=2000ms
spring.data.redis.database=0

payment.mock.enabled=true

management.endpoints.web.exposure.include=health,info
management.endpoint.health.show-details=always

logging.level.com.eatcloud.orderservice=DEBUG
logging.level.org.springframework.cloud.netflix.eureka=DEBUG

toss.api.base-url=https://api.tosspayments.com
toss.client-key=test_ck_PBal2vxj81zE0aPZaJJw35RQgOAN
toss.secret-key=test_sk_EP59LybZ8BvPnakezLBG86GYo7pR
toss.success.url=http://localhost : 8080/payment/success
toss.fail.url=http://Localhost:8080/payment/fail

spring.kafka.bootstrap-servers=localhost:9092
spring.kafka.consumer.group-id=payment-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*

spring.security.oauth2.resourceserver.jwt.jwk-set-uri=http://auth-service:8081/api/v1/auth/.well-known/jwks.json
