server.port=8084
spring.application.name=payment-service
# Eureka

spring.datasource.url=jdbc:postgresql://${PAYMENT_DB_HOST}:${DB_PORT}/${PAYMENT_DB_NAME:payment_db}
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}
spring.datasource.driver-class-name=org.postgresql.Driver


spring.data.redis.host=${REDIS_HOST}
spring.data.redis.port=6379

payment.mock.enabled=true

#management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

logging.level.com.eatcloud.paymentservice=DEBUG

spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.trusted.packages=*

spring.kafka.consumer.group-id=payment-service
spring.kafka.consumer.auto-offset-reset=earliest
spring.kafka.consumer.key-deserializer=org.apache.kafka.common.serialization.StringDeserializer
spring.kafka.consumer.value-deserializer=org.springframework.kafka.support.serializer.JsonDeserializer
spring.kafka.consumer.properties.spring.json.trusted.packages=*
spring.kafka.consumer.properties.spring.json.use.type.headers=false
spring.kafka.consumer.properties.spring.json.value.default.type=com.eatcloud.paymentservice.event.OrderCreatedEvent

# Swagger/OpenAPI Configuration
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
server.forward-headers-strategy=framework

# Logging Configuration
logging.level.com.eatcloud.logging=DEBUG
logging.pattern.console=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{requestId:-}] [%X{userId:-}] %logger{36} - %msg%n
logging.pattern.file=%d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level [%X{requestId:-}] [%X{userId:-}] %logger{36} - %msg%n

# Logback 파일 경로
logging.file.path=./logs
logging.file.name=./logs/payment-service.log

# Management endpoints
management.endpoints.web.exposure.include=health,info,metrics,loggers
management.endpoint.loggers.enabled=true
