# EatCloud MSA v1 - 메인 Docker Compose 파일
# 단일 RDS 사용으로 업데이트됨
# 
# 사용법:
# 개발 환경: docker-compose -f deploy/compose/.yml -f deploy/compose/dev/.yml up
# 프로덕션 환경: docker-compose -f deploy/compose/.yml -f deploy/compose/prod/.yml up
# 
# 간단한 실행 (개발 환경): docker-compose up

version: "3.8"

# 개발 환경용 심플한 실행 설정
services:
  eureka-server:
    build:
      context: .
      dockerfile: eureka-server/Dockerfile
    container_name: eureka-server
    ports:
      - "8761:8761"
    environment:
      SPRING_PROFILES_ACTIVE: dev
    networks:
      - eatcloud-network
    restart: unless-stopped

  api-gateway:
    build:
      context: .
      dockerfile: api-gateway/Dockerfile
    container_name: api-gateway
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: http://eureka-server:8761/eureka
    depends_on:
      - eureka-server
    networks:
      - eatcloud-network
    restart: unless-stopped

  redis:
    image: redis:7-alpine
    container_name: eatcloud-redis
    ports:
      - "6379:6379"
    command: ["redis-server", "--appendonly", "yes"]
    volumes:
      - redis-data:/data
    networks:
      - eatcloud-network
    restart: unless-stopped

  # 통합 데이터베이스 (개발용)
  # 프로덕션에서는 AWS RDS 사용
  eatcloud-db:
    image: postgis/postgis:17-3.4
    container_name: eatcloud-db
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: eatcloud_db
      POSTGRES_USER: eatcloud_user
      POSTGRES_PASSWORD: devpassword123
      POSTGRES_MULTIPLE_DATABASES: auth_db,customer_db,admin_db,manager_db,store_db,order_db,payment_db
    volumes:
      - eatcloud_db_data:/var/lib/postgresql/data
      - ./deploy/compose/scripts/create-multiple-databases.sh:/docker-entrypoint-initdb.d/00-create-multiple-databases.sh:ro
    networks:
      - eatcloud-network
    restart: unless-stopped

volumes:
  redis-data:
    driver: local
  eatcloud_db_data:
    driver: local

networks:
  eatcloud-network:
    driver: bridge
