# EatCloud MSA - Separate Database Services
# Auth service는 eatcloud-db 공유, 나머지는 개별 DB 사용

---
# Customer Database
apiVersion: v1
kind: Service
metadata:
  name: customer-db
  namespace: eatcloud
  labels:
    app: customer-db
spec:
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  selector:
    app: customer-db
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: customer-db
  namespace: eatcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: customer-db
  template:
    metadata:
      labels:
        app: customer-db
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "customer_db"
        - name: POSTGRES_USER
          value: "eatcloud_user"
        - name: POSTGRES_PASSWORD
          value: "devpassword123"
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - eatcloud_user
            - -d
            - customer_db
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - eatcloud_user
            - -d
            - customer_db
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 5
      volumes:
      - name: postgres-data
        emptyDir: {}

---
# Admin Database
apiVersion: v1
kind: Service
metadata:
  name: admin-db
  namespace: eatcloud
  labels:
    app: admin-db
spec:
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  selector:
    app: admin-db
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: admin-db
  namespace: eatcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: admin-db
  template:
    metadata:
      labels:
        app: admin-db
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "admin_db"
        - name: POSTGRES_USER
          value: "eatcloud_user"
        - name: POSTGRES_PASSWORD
          value: "devpassword123"
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - eatcloud_user
            - -d
            - admin_db
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - eatcloud_user
            - -d
            - admin_db
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 5
      volumes:
      - name: postgres-data
        emptyDir: {}

---
# Manager Database
apiVersion: v1
kind: Service
metadata:
  name: manager-db
  namespace: eatcloud
  labels:
    app: manager-db
spec:
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  selector:
    app: manager-db
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: manager-db
  namespace: eatcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: manager-db
  template:
    metadata:
      labels:
        app: manager-db
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "manager_db"
        - name: POSTGRES_USER
          value: "eatcloud_user"
        - name: POSTGRES_PASSWORD
          value: "devpassword123"
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - eatcloud_user
            - -d
            - manager_db
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - eatcloud_user
            - -d
            - manager_db
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 5
      volumes:
      - name: postgres-data
        emptyDir: {}

---
# Store Database
apiVersion: v1
kind: Service
metadata:
  name: store-db
  namespace: eatcloud
  labels:
    app: store-db
spec:
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  selector:
    app: store-db
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: store-db
  namespace: eatcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: store-db
  template:
    metadata:
      labels:
        app: store-db
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "store_db"
        - name: POSTGRES_USER
          value: "eatcloud_user"
        - name: POSTGRES_PASSWORD
          value: "devpassword123"
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        volumeMounts:
        - name: postgres-data
          mountPath: /var/lib/postgresql/data
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - eatcloud_user
            - -d
            - store_db
          initialDelaySeconds: 60
          periodSeconds: 30
          timeoutSeconds: 10
          failureThreshold: 5
        readinessProbe:
          exec:
            command:
            - pg_isready
            - -U
            - eatcloud_user
            - -d
            - store_db
          initialDelaySeconds: 60
          periodSeconds: 15
          timeoutSeconds: 10
          failureThreshold: 5
      volumes:
      - name: postgres-data
        emptyDir: {}

---
# Order Database
apiVersion: v1
kind: Service
metadata:
  name: order-db
  namespace: eatcloud
  labels:
    app: order-db
spec:
  ports:
  - port: 5432
    targetPort: 5432
    name: postgres
  selector:
    app: order-db
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: order-db
  namespace: eatcloud
spec:
  replicas: 1
  selector:
    matchLabels:
      app: order-db
  template:
    metadata:
      labels:
        app: order-db
    spec:
      containers:
      - name: postgres
        image: postgres:15-alpine
        ports:
        - containerPort: 5432
        env:
        - name: POSTGRES_DB
          value: "order_db"
        - name: POSTGRES_USER
          value: "eatcloud_user"
        - name: POSTGRES_PASSWORD
          value: "devpassword123"
        - name: PGDATA
          value: "/var/lib/postgresql/data/pgdata"
        volumeM