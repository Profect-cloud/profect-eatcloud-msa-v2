apiVersion: v1
kind: ConfigMap
metadata:
  name: common-config
  namespace: eatcloud
data:
  # Database Configuration - Service-specific hosts
  # Auth service uses shared eatcloud-db, others use separate DBs
  AUTH_DB_HOST: "eatcloud-db"
  CUSTOMER_DB_HOST: "customer-db"
  ADMIN_DB_HOST: "admin-db"
  MANAGER_DB_HOST: "manager-db"
  STORE_DB_HOST: "store-db"
  ORDER_DB_HOST: "order-db"
  PAYMENT_DB_HOST: "payment-db"
  
  # Common Database Configuration
  DB_PORT: "5432"
  DB_USERNAME: "eatcloud_user"
  
  # Database Names for each service
  AUTH_DB_NAME: "auth_db"
  CUSTOMER_DB_NAME: "customer_db"
  ADMIN_DB_NAME: "admin_db"
  MANAGER_DB_NAME: "manager_db"
  STORE_DB_NAME: "store_db"
  ORDER_DB_NAME: "order_db"
  PAYMENT_DB_NAME: "payment_db"
  
  # Redis Configuration (SSL 비활성화 및 timeout 증가)
  REDIS_HOST: "eatcloud-redis"
  REDIS_PORT: "6379"
  REDIS_TIMEOUT: "10000ms"
  REDIS_DATABASE: "0"
  REDIS_POOL_MAX_ACTIVE: "8"
  REDIS_POOL_MAX_IDLE: "8"
  REDIS_POOL_MIN_IDLE: "0"
  REDIS_SSL_ENABLED: "false"
  
  # Redis 추가 설정 (연결 안정성 향상)
  SPRING_DATA_REDIS_HOST: "eatcloud-redis"
  SPRING_DATA_REDIS_PORT: "6379"
  SPRING_DATA_REDIS_TIMEOUT: "10000ms"
  SPRING_DATA_REDIS_SSL_ENABLED: "false"
  SPRING_DATA_REDIS_LETTUCE_POOL_MAX_ACTIVE: "8"
  SPRING_DATA_REDIS_LETTUCE_POOL_MAX_IDLE: "8"
  SPRING_DATA_REDIS_LETTUCE_POOL_MIN_IDLE: "0"
  
  # Session Configuration
  SPRING_SESSION_STORE_TYPE: "redis"
  SPRING_SESSION_REDIS_FLUSH_MODE: "on_save"
  SPRING_SESSION_REDIS_NAMESPACE: "eatcloud:session"
  
  # Kafka Configuration
  SPRING_KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
  KAFKA_BOOTSTRAP_SERVERS: "kafka:9092"
  
  # Eureka Configuration
  EUREKA_CLIENT_SERVICE_URL_DEFAULTZONE: "http://eureka-server:8761/eureka"
  EUREKA_INSTANCE_PREFER_IP_ADDRESS: "true"
  EUREKA_CLIENT_ENABLED: "true"
  SPRING_CLOUD_DISCOVERY_ENABLED: "true"
  
  # Spring Profiles
  SPRING_PROFILES_ACTIVE: "docker"
  
  # JPA Configuration
  SPRING_JPA_HIBERNATE_DDL_AUTO: "none"
  SPRING_JPA_SHOW_SQL: "true"
  SPRING_JPA_DATABASE_PLATFORM: "org.hibernate.dialect.PostgreSQLDialect"
  SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "true"
  SPRING_SQL_INIT_MODE: "always"
  SPRING_JPA_DEFER_DATASOURCE_INITIALIZATION: "false"
  
  # Logging Configuration
  LOGGING_LEVEL_COM_EATCLOUD: "DEBUG"
  LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_CORE_ENV: "DEBUG"
  LOGGING_LEVEL_ORG_SPRINGFRAMEWORK_BOOT_CONTEXT_CONFIG: "DEBUG"
  
  # Management Endpoints
  MANAGEMENT_ENDPOINTS_WEB_EXPOSURE_INCLUDE: "health,info,metrics"
  MANAGEMENT_ENDPOINT_HEALTH_SHOW_DETAILS: "always"
  MANAGEMENT_HEALTH_REDIS_ENABLED: "true"
  
  # JWT Configuration
  SPRING_SECURITY_OAUTH2_RESOURCESERVER_JWT_JWK_SET_URI: "http://auth-service:8081/api/v1/auth/.well-known/jwks.json"
  
  # Mail Configuration (for auth-service)
  SPRING_MAIL_HOST: "smtp.gmail.com"
  SPRING_MAIL_PORT: "587"
  SPRING_MAIL_USERNAME: "profect.eatcloud@gmail.com"
  SPRING_MAIL_PROPERTIES_MAIL_SMTP_AUTH: "true"
  SPRING_MAIL_PROPERTIES_MAIL_SMTP_STARTTLS_ENABLE: "true"
  SPRING_MAIL_PROPERTIES_MAIL_TRANSPORT_PROTOCOL: "smtp"
  SPRING_MAIL_PROPERTIES_MAIL_DEBUG: "true"
  
  # Payment Service Configuration
  PAYMENT_MOCK_ENABLED: "true"
  TOSS_API_BASE_URL: "https://api.tosspayments.com"
  TOSS_CLIENT_KEY: "test_ck_PBal2vxj81zE0aPZaJJw35RQgOAN"
  TOSS_SUCCESS_URL: "http://localhost:8080/payment/success"
  TOSS_FAIL_URL: "http://localhost:8080/payment/fail"
  
  # Swagger/OpenAPI Configuration
  SPRINGDOC_API_DOCS_ENABLED: "true"
  SPRINGDOC_SWAGGER_UI_ENABLED: "true"
  SERVER_FORWARD_HEADERS_STRATEGY: "framework"
  
  # Kafka Consumer Configuration
  SPRING_KAFKA_CONSUMER_AUTO_OFFSET_RESET: "earliest"
  SPRING_KAFKA_CONSUMER_KEY_DESERIALIZER: "org.apache.kafka.common.serialization.StringDeserializer"
  SPRING_KAFKA_CONSUMER_VALUE_DESERIALIZER: "org.springframework.kafka.support.serializer.JsonDeserializer"
  SPRING_KAFKA_CONSUMER_PROPERTIES_SPRING_JSON_TRUSTED_PACKAGES: "*"
  
  # Kafka Producer Configuration
  SPRING_KAFKA_PRODUCER_KEY_SERIALIZER: "org.apache.kafka.common.serialization.StringSerializer"
  SPRING_KAFKA_PRODUCER_VALUE_SERIALIZER: "org.springframework.kafka.support.serializer.JsonSerializer"

---

