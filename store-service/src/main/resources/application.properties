?server.port=8085
spring.application.name=store-service

admin.service-id=admin-service
orders.service-id=orders-service

spring.datasource.driver-class-name=org.postgresql.Driver
spring.jpa.database-platform=org.hibernate.dialect.PostgreSQLDialect
spring.jpa.properties.hibernate.format_sql=true

spring.datasource.url=jdbc:postgresql://${DB_HOST}:${DB_PORT}/store_db
spring.datasource.username=${DB_USERNAME}
spring.datasource.password=${DB_PASSWORD}

management.endpoints.web.exposure.include=health,info,metrics
management.endpoint.health.show-details=always

google.ai.api.base-url=https://generativelanguage.googleapis.com

logging.level.org.springframework.data.repository=DEBUG
logging.level.org.springframework.data.jpa.repository.query=DEBUG
gemini.api-key=${GEMINI_API_KEY}

# Swagger/OpenAPI Configuration
springdoc.api-docs.enabled=true
springdoc.swagger-ui.enabled=true
server.forward-headers-strategy=framework

#Redisson
spring.data.redis.host=localhost
spring.data.redis.port=6379

# ????: REDIS_URL > REDIS_HOST/REDIS_PORT > localhost
redis.url=${REDIS_URL:redis://${REDIS_HOST:localhost}:${REDIS_PORT:6379}}



inventory.lock.wait-millis=300
inventory.lock.lease-millis=4000
inventory.lock.retry-count=3
inventory.ttl.enabled=true
inventory.batch-size=500
inventory.outbox.publisher.enabled=true
inventory.outbox.batch-size=200
inventory.cache.ttl-seconds=300

spring.kafka.bootstrap-servers=${SPRING_KAFKA_BOOTSTRAP_SERVERS:localhost:9092}
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.trusted.packages=*

# --- Outbox Publisher ?? ---
inventory.outbox.publisher.mode=kafka
inventory.outbox.publisher.topic=stock-events

#logging.level.org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping=TRACE

